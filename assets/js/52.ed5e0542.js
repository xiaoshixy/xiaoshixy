(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{558:function(a,s,e){"use strict";e.r(s);var t=e(16),v=Object(t.a)({},(function(){var a=this,s=a.$createElement,e=a._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"事务-掌握"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务-掌握"}},[a._v("#")]),a._v(" 事务（掌握）")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("概念")]),a._v(" "),e("p",[a._v("一个事务其实就是一个完整的业务逻辑。\n是一个最小的工作单元。不可再分。")])]),a._v(" "),e("p",[a._v("什么是一个完整的业务逻辑？⬇️")]),a._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[a._v("点击查看")]),a._v(" "),e("p",[a._v("假设转账，从A账户向B账户中转账10000."),e("br"),a._v("\n将A账户的钱减去10000（"),e("code",[a._v("update")]),a._v("语句）"),e("br"),a._v("\n将B账户的钱加上10000（"),e("code",[a._v("update")]),a._v("语句）"),e("br"),a._v("\n这就是一个完整的业务逻辑。")]),a._v(" "),e("p",[a._v("以上的操作是一个最小的工作单元，要么同时成功，要么同时失败，不可再分。")]),a._v(" "),e("p",[a._v("这两个"),e("code",[a._v("update")]),a._v("语句要求必须同时成功或者同时失败，这样才能保证钱是正确的。")])]),a._v(" "),e("p",[a._v("只有DML语句才会有事务这一说，其它语句和事务无关！！！"),e("br"),a._v(" "),e("code",[a._v("insert")]),e("br"),a._v(" "),e("code",[a._v("delete")]),e("br"),a._v(" "),e("code",[a._v("update")]),e("br"),a._v(" "),e("strong",[a._v("只有以上的三个语句和事务有关系，其它都没有关系。")]),e("br")]),a._v(" "),e("p",[a._v("因为 只有以上的三个语句是数据库表中数据进行增、删、改的。"),e("br"),a._v("\n只要你的操作一旦涉及到数据的增、删、改，那么就一定要考虑安全问题。"),e("br")]),a._v(" "),e("h3",{attrs:{id:"到底什么是事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#到底什么是事务"}},[a._v("#")]),a._v(" 到底什么是事务")]),a._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[a._v("警告")]),a._v(" "),e("p",[a._v("说到底，说到本质上，一个事务其实就是多条DML语句同时成功，或者同时失败！"),e("br"),a._v(" "),e("strong",[a._v("事务：就是批量的DML语句同时成功，或者同时失败！")])])]),a._v(" "),e("h3",{attrs:{id:"事务是怎么做到多条dml语句同时成功和同时失败的"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务是怎么做到多条dml语句同时成功和同时失败的"}},[a._v("#")]),a._v(" 事务是怎么做到多条DML语句同时成功和同时失败的")]),a._v(" "),e("p",[e("code",[a._v("InnoDB")]),a._v("存储引擎：提供一组用来记录事务性活动的日志文件")]),a._v(" "),e("blockquote",[e("p",[a._v("事务开启了："),e("br"),a._v("\ninsert"),e("br"),a._v("\ninsert"),e("br"),a._v("\ninsert"),e("br"),a._v("\ndelete"),e("br"),a._v("\nupdate"),e("br"),a._v("\nupdate"),e("br"),a._v("\nupdate"),e("br"),a._v("\n事务结束了！")])]),a._v(" "),e("h4",{attrs:{id:"提交事务和回滚事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#提交事务和回滚事务"}},[a._v("#")]),a._v(" 提交事务和回滚事务")]),a._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[a._v("点击查看")]),a._v(" "),e("blockquote",[e("p",[a._v("在事务的执行过程中，每一条DML的操作都会记录到“事务性活动的日志文件”中。"),e("br"),a._v("\n在事务的执行过程中，我们可以提交事务，也可以回滚事务。")])]),a._v(" "),e("ol",[e("li",[e("p",[a._v("提交事务？")]),a._v(" "),e("p",[a._v("清空事务性活动的日志文件，将数据全部彻底"),e("strong",[a._v("持久化")]),a._v("到数据库表中。")]),a._v(" "),e("p",[a._v("提交事务标志着，事务的结束。并且是一种"),e("strong",[a._v("全部成功")]),a._v("的结束。")])]),a._v(" "),e("li",[e("p",[a._v("回滚事务？")]),a._v(" "),e("p",[a._v("将之前所有的DML操作全部撤销，并且"),e("strong",[a._v("清空事务性活动")]),a._v("的日志文件")]),a._v(" "),e("p",[a._v("回滚事务标志着，事务的结束。并且是一种"),e("strong",[a._v("全部失败")]),a._v("的结束。")])])])]),a._v(" "),e("h2",{attrs:{id:"怎么提交事务-怎么回滚事务"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么提交事务-怎么回滚事务"}},[a._v("#")]),a._v(" 怎么提交事务，怎么回滚事务")]),a._v(" "),e("blockquote",[e("p",[a._v("提交事务：commit; 语句"),e("br")]),a._v(" "),e("p",[a._v("回滚事务：rollback; 语句（回滚永远都是只能回滚到上一次的提交点！）")])]),a._v(" "),e("ul",[e("li",[a._v("事务对应的英语单词是：transaction")])]),a._v(" "),e("p",[a._v("测试一下，在mysql当中默认的事务行为是怎样的")]),a._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[a._v("点击查看")]),a._v(" "),e("p",[a._v("mysql默认情况下是支持自动提交事务的。（自动提交）")]),a._v(" "),e("p",[a._v("什么是自动提交？")]),a._v(" "),e("p",[a._v("每执行一条DML语句，则提交一次！")]),a._v(" "),e("p",[a._v("这种自动提交实际上是不符合我们的开发习惯，因为一个业务通常是需要多条DML语句共同执行才能完成的，为了保证数据的安全，必须要求同时成功之后再提交，所以不能执行一条就提交一条。")])]),a._v(" "),e("ul",[e("li",[a._v("怎么将mysql的自动提交机制关闭掉呢？")]),a._v(" "),e("li",[a._v("先执行这个命令：start transaction;")])]),a._v(" "),e("h2",{attrs:{id:"事务包括4个特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务包括4个特性"}},[a._v("#")]),a._v(" 事务包括4个特性")]),a._v(" "),e("ul",[e("li",[e("p",[a._v("A：原子性")]),a._v(" "),e("p",[a._v("说明事务是"),e("strong",[a._v("最小")]),a._v("的工作单元。"),e("strong",[a._v("不可再分")]),a._v("。")])]),a._v(" "),e("li",[e("p",[a._v("C：一致性")]),a._v(" "),e("p",[a._v("所有事务要求，在同一个事务当中，所有操作必须"),e("strong",[a._v("同时成功")]),a._v("，或者"),e("strong",[a._v("同时失败")]),a._v("，以保证数据的一致性。")])]),a._v(" "),e("li",[e("p",[a._v("I：隔离性")]),a._v(" "),e("p",[e("strong",[a._v("A事务和B事务之间具有一定的隔离")]),a._v("。")]),a._v(" "),e("p",[a._v("教室A和教室B之间有一道墙，这道墙就是隔离性。")]),a._v(" "),e("p",[a._v("A事务在操作一张表的时候，另一个事务B也操作这张表会那样？？？")])]),a._v(" "),e("li",[e("p",[a._v("D：持久性")]),a._v(" "),e("p",[e("strong",[a._v("事务最终结束的一个保障")]),a._v("。事务提交，就相当于将没有保存到硬盘上的数据保存到硬盘上！")])])]),a._v(" "),e("h2",{attrs:{id:"事务的隔离性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事务的隔离性"}},[a._v("#")]),a._v(" 事务的隔离性")]),a._v(" "),e("blockquote",[e("p",[a._v("A教室和B教室中间有一道墙，这道墙可以很厚，也可以很薄。这就是事务的隔离级别。"),e("br"),a._v("\n这道墙越厚，表示隔离级别就越高。")])]),a._v(" "),e("p",[a._v("事务和事务之间的隔离级别有哪些呢？4个级别")]),a._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[a._v("点击查看")]),a._v(" "),e("ul",[e("li",[a._v("读未提交：read uncommitted（"),e("strong",[a._v("最低的隔离级别")]),a._v("）《没有提交就读到了》")])]),a._v(" "),e("blockquote",[e("p",[a._v("什么是读未提交？")]),a._v(" "),e("p",[a._v("事务A可以读取到事务B未提交的数据。")]),a._v(" "),e("p",[a._v("这种隔离级别存在的问题就是：**脏读现象(Dirty Read)**我们称读到了脏数据。")]),a._v(" "),e("p",[a._v("这种隔离级别一般都是理论上的，"),e("strong",[a._v("大多数的数据库隔离级别都是二档起步")])])]),a._v(" "),e("ul",[e("li",[a._v("读已提交：read committed《提交之后才能读到》")])]),a._v(" "),e("blockquote",[e("p",[a._v("什么是读已提交？")]),a._v(" "),e("p",[a._v("事务A只能读取到事务B提交之后的数据。")]),a._v(" "),e("p",[a._v("这种隔离级别解决了什么问题？"),e("strong",[a._v("解决了脏读的现象")])]),a._v(" "),e("p",[a._v("这种隔离级别存在什么问题？"),e("strong",[a._v("不可重复读取数据")])]),a._v(" "),e("p",[a._v("什么是不可重复读取数据呢？")]),a._v(" "),e("p",[a._v("在事务开启之后，第一次读到的数据是3条，当前事务还没有结束，可能第二次再读取的时候，读到的数据是4条，3不等于4称为不可重复读取。")])]),a._v(" "),e("p",[e("strong",[a._v("这种隔离级别是比较真实的数据，每一次读到的数据是绝对的真实")]),a._v("。")]),a._v(" "),e("ul",[e("li",[a._v("可重复读：repeatable read《提交之后也读不到，"),e("strong",[a._v("永远读取的都是刚开启事务时的数据")]),a._v("》")])]),a._v(" "),e("blockquote",[e("p",[a._v("什么是可重复读取？")]),a._v(" "),e("p",[a._v("事务A开启之后，不管是多久，每一次在事务A中读取到的数据都是一致的。")]),a._v(" "),e("p",[a._v("即使事务B将数据已经修改，并且提交了，事务A读取到的数据还是没有发生改变，这就是可重复读。\n可重复读解决了什么问题？")]),a._v(" "),e("p",[a._v("解决了不可重复读取数据。")]),a._v(" "),e("p",[a._v("可重复读存在的问题是什么？")]),a._v(" "),e("p",[a._v("可以会出现幻影读。每一次读取到的数据都是幻象。不够真实！")])]),a._v(" "),e("p",[a._v("早晨9点开始开启了事务，只要事务不结束，到晚上9点，读到的数据还是那样！读到的是假象。不够绝对的真实。"),e("br")]),a._v(" "),e("p",[e("strong",[a._v("mysql中默认的事务隔离级别就是这个！！！")])]),a._v(" "),e("ul",[e("li",[a._v("序列化/串行化：serializable（最高的隔离级别）")])]),a._v(" "),e("blockquote",[e("p",[a._v("这是最高隔离级别，效率最低。解决了所有的问题。")]),a._v(" "),e("p",[a._v("这种隔离级别表示事务排队，"),e("strong",[a._v("不能并发")]),a._v("！")]),a._v(" "),e("p",[a._v("synchronized，线程同步（事务同步）")]),a._v(" "),e("p",[e("strong",[a._v("每一次读取到的数据都是最真实的，并且效率是最低的")])])])]),a._v(" "),e("h2",{attrs:{id:"验证各种隔离级别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证各种隔离级别"}},[a._v("#")]),a._v(" 验证各种隔离级别")]),a._v(" "),e("p",[a._v("查看隔离级别：SELECT @@transaction_isolation;")]),a._v(" "),e("h3",{attrs:{id:"验证-read-uncommited"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-read-uncommited"}},[a._v("#")]),a._v(" 验证：read uncommited")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://git.poker/xiayuan-001/picx-image-hosting/blob/main/vueblog/shi1.5p1gvnf8lqo0.webp?raw=true",alt:"shi1"}})]),a._v(" "),e("h3",{attrs:{id:"验证-read-commited"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-read-commited"}},[a._v("#")]),a._v(" 验证：read commited")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://git.poker/xiayuan-001/picx-image-hosting/blob/main/vueblog/shi2.1ehygkuevts0.webp?raw=true",alt:"shi2"}})]),a._v(" "),e("h3",{attrs:{id:"验证-repeatable-read"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-repeatable-read"}},[a._v("#")]),a._v(" 验证：repeatable read")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://git.poker/xiayuan-001/picx-image-hosting/blob/main/vueblog/shi3.4uyd4t1kfu60.webp?raw=true",alt:"shi3"}})]),a._v(" "),e("h3",{attrs:{id:"验证-serializable"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#验证-serializable"}},[a._v("#")]),a._v(" 验证：serializable")]),a._v(" "),e("p",[e("img",{attrs:{src:"https://git.poker/xiayuan-001/picx-image-hosting/blob/main/vueblog/shi4.532pcyqzcu40.webp?raw=true",alt:"shi4"}})]),a._v(" "),e("h2",{attrs:{id:"索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引"}},[a._v("#")]),a._v(" 索引")]),a._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[a._v("概念")]),a._v(" "),e("p",[a._v("索引是在数据库表的字段上添加的，是为了提高查询效率存在的一种机制。")]),a._v(" "),e("p",[a._v("一张表的一个字段可以添加一个索引，当然，多个字段联合起来也可以添加索引。")]),a._v(" "),e("p",[e("strong",[a._v("索引相当于一本书的目录，是为了缩小扫描范围而存在的一种机制")]),a._v("。")])]),a._v(" "),e("p",[a._v("MySQL在查询方面主要就是两种方式：")]),a._v(" "),e("p",[a._v("第一种方式：全表扫描")]),a._v(" "),e("p",[a._v("第二种方式：根据索引检索。")]),a._v(" "),e("h2",{attrs:{id:"索引的实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引的实现原理"}},[a._v("#")]),a._v(" 索引的实现原理")]),a._v(" "),e("details",{staticClass:"custom-block details"},[e("summary",[a._v("点击查看")]),a._v(" "),e("ol",[e("li",[e("p",[a._v("提醒1：在任何数据库当中"),e("strong",[a._v("主键上都会自动添加索引对象")]),a._v("，id字段上自动有索引，因为id是PK。另外在mysql当中，一个字段上如果有"),e("strong",[a._v("unique约束")]),a._v("的话，也会"),e("strong",[a._v("自动创建索引")]),a._v("对象")])]),a._v(" "),e("li",[e("p",[a._v("提醒2：在任何数据库当中，任何一张表的任何一条记录在硬盘存储上都有一个硬盘的物理存储编号。")])]),a._v(" "),e("li",[e("p",[a._v("提醒3：在mysql当中，索引是一个单独的对象，不同的存储引擎以不同的形式存在，在MyISAM存储引擎中，索引存储在一个.MYI文件中。在InnoDB存储引擎中索引存储在一个逻辑名称叫做tablespace的当中。在MEMORY存储引擎当中索引被存储在内存当中。不管索引存储在哪里，"),e("strong",[a._v("索引在mysql当中都是一个树的形式")]),a._v("存在。（"),e("strong",[a._v("自平衡二叉树：B-Tree")]),a._v("）")])])])]),a._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[a._v("警告")]),a._v(" "),e("ul",[e("li",[a._v("什么条件下，我们会考虑给字段添加索引")])]),a._v(" "),e("p",[a._v("条件1：数据量庞大")]),a._v(" "),e("p",[a._v("条件2：该字段经常出现在where的后面，以条件的形式存在，也就是说这个字段总是被扫描。")]),a._v(" "),e("p",[a._v("条件3：该字段很少的DML(insert delete update)操作。（因为DML之后，索引需要重新排序。）")]),a._v(" "),e("p",[a._v("建议不要随意添加索引，因为索引也是需要维护的，太多的话反而会降低系统的性能。")]),a._v(" "),e("p",[a._v("建议通过主键查询，建议通过unique约束的字段进行查询，效率是比较高的。")])]),a._v(" "),e("h2",{attrs:{id:"索引的创建-删除-语法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引的创建-删除-语法"}},[a._v("#")]),a._v(" 索引的创建/删除/语法")]),a._v(" "),e("h3",{attrs:{id:"创建索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#创建索引"}},[a._v("#")]),a._v(" 创建索引")]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("#给emp表的ename字段添加索引，起名：emp_ename_index\ncreate index emp_ename_index on emp(ename);\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"删除索引"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#删除索引"}},[a._v("#")]),a._v(" 删除索引")]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("#将emp表上的emp_ename_index索引对象删除。\ndrop index emp_ename_index on emp;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br")])]),e("h3",{attrs:{id:"怎么查看一个sql语句是否使用了索引进行检索"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#怎么查看一个sql语句是否使用了索引进行检索"}},[a._v("#")]),a._v(" 怎么查看一个SQL语句是否使用了索引进行检索")]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("#扫描14条记录：说明没有使用索引。type=ALL\nexplain select * from emp where ename = 'KING';\ncreate index emp_ename_index on emp(ename);\nexplain select * from emp where ename = 'KING';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br"),e("span",{staticClass:"line-number"},[a._v("4")]),e("br")])]),e("h2",{attrs:{id:"索引失效"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引失效"}},[a._v("#")]),a._v(" 索引失效")]),a._v(" "),e("h3",{attrs:{id:"失效的第1种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#失效的第1种情况"}},[a._v("#")]),a._v(" 失效的第1种情况")]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("select * from emp where ename like '%T';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("p",[a._v("ename上即使添加了索引，也不会走索引，为什么？")]),a._v(" "),e("ul",[e("li",[a._v("原因是因为模糊匹配当中以“%”开头了！")]),a._v(" "),e("li",[e("strong",[a._v("尽量避免模糊查询的时候以“%”开始")]),a._v("。")]),a._v(" "),e("li",[a._v("这是一种优化的手段/策略。")])]),a._v(" "),e("h3",{attrs:{id:"失效的第2种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#失效的第2种情况"}},[a._v("#")]),a._v(" 失效的第2种情况")]),a._v(" "),e("ul",[e("li",[a._v("使用or的时候会失效，"),e("strong",[a._v("如果使用or那么要求or两边的条件字段都要有索引，才会走索引")]),a._v("，如果其中一边有一个字段没有索引，那么另一个字段上的索引也会实现。")]),a._v(" "),e("li",[a._v("所以这就是为什么不建议使用or的原因。")])]),a._v(" "),e("h3",{attrs:{id:"失效的第3种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#失效的第3种情况"}},[a._v("#")]),a._v(" 失效的第3种情况")]),a._v(" "),e("ul",[e("li",[a._v("使用复合索引的时候，没有使用左侧的列查找，索引失效")]),a._v(" "),e("li",[a._v("什么是复合索引？")]),a._v(" "),e("li",[a._v("两个字段，或者更多的字段联合起来添加一个索引，叫做复合索引。")])]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("create index emp_job_sal_index on emp(job,sal);\nexplain select * from emp where job = 'MANAGER';\nexplain select * from emp where sal = 800;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h3",{attrs:{id:"失效的第4种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#失效的第4种情况"}},[a._v("#")]),a._v(" 失效的第4种情况")]),a._v(" "),e("ul",[e("li",[a._v("在where当中索引列参加了运算，索引失效。")])]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("create index emp_sal_index on emp(sal);\nexplain select * from emp where sal = 800;\nexplain select * from emp where sal+1 = 800;\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br"),e("span",{staticClass:"line-number"},[a._v("2")]),e("br"),e("span",{staticClass:"line-number"},[a._v("3")]),e("br")])]),e("h3",{attrs:{id:"失效的第5种情况"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#失效的第5种情况"}},[a._v("#")]),a._v(" 失效的第5种情况")]),a._v(" "),e("ul",[e("li",[a._v("在where当中索引列使用了函数")])]),a._v(" "),e("div",{staticClass:"language-mysql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[a._v("explain select * from emp where lower(ename) = 'smith';\n")])]),a._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[a._v("1")]),e("br")])]),e("h2",{attrs:{id:"索引分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#索引分类"}},[a._v("#")]),a._v(" 索引分类")]),a._v(" "),e("blockquote",[e("p",[a._v("索引是各种数据库进行优化的重要手段。"),e("strong",[a._v("优化的时候优先考虑的因素就是索引")]),a._v("。")])]),a._v(" "),e("ul",[e("li",[a._v("单一索引：一个字段上添加索引。")]),a._v(" "),e("li",[a._v("复合索引：两个字段或者更多的字段上添加索引。")]),a._v(" "),e("li",[a._v("主键索引：主键上添加索引。")]),a._v(" "),e("li",[a._v("唯一性索引：具有unique约束的字段上添加索引。")])]),a._v(" "),e("p",[a._v("注意：唯一性比较弱的字段上添加索引用处不大。")])])}),[],!1,null,null,null);s.default=v.exports}}]);